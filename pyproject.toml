# PEP 621 build info
[build-system]
requires = [
  "cffi; implementation_name == 'pypy'",
  "cython>=3.0.0; implementation_name == 'cpython'",
  "packaging",
  "setuptools>=61",
  "setuptools_scm[toml]",
]
build-backend = "setuptools.build_meta"

# Project metadata
# ref: https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[project]
name = "pyzmq"
version = "26.0.0.dev0"
authors = [
  { name = "PyZMQ Contributors", email = "zeromq-dev@lists.zeromq.org" },
  { name = "Brian E. Granger" },
  { name = "Min Ragan-Kelley" },
]
license = { text = "BSD-3-Clause" }
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: BSD License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Topic :: System :: Networking",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = ["cffi; implementation_name == 'pypy'"]
description = "Python bindings for 0MQ"
dynamic = ["readme"]

[project.urls]
Homepage = "https://pyzmq.readthedocs.org"
Documentation = "https://pyzmq.readthedocs.org"
Source = "https://github.com/zeromq/pyzmq"
Tracker = "https://github.com/zeromq/pyzmq/issues"

[tool.setuptools]
zip-safe = false
license-files = ["LICENSE.md", "bundled/zeromq/COPYING", "bundled/zeromq/COPYING.LESSER"]

[tool.setuptools.dynamic]
readme = { file = "README.md" }

[tool.autoflake]
ignore-init-module-imports = true
remove-all-unused-imports = true
remove-duplicate-keys = true

# remove-unused-variables = true
[tool.black]
skip-string-normalization = true
exclude = "zmq/eventloop/minitornado|docs/source/conf.py"

[tool.isort]
profile = "black"
multi_line_output = 3
skip = ["zmq/__init__.py"]

[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
github_url = "https://github.com/zeromq/pyzmq"

[tool.tbump.version]
current = "26.0.0.dev0"
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (?P<pre>((a|b|rc|)\d+)|.dev\d*|)
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# pyproject.toml location.
[[tool.tbump.file]]
src = "pyproject.toml"
search = 'version = "{current_version}"'

[[tool.tbump.file]]
src = "zmq/sugar/version.py"
search = '__version__: str = "{current_version}"'

[tool.cibuildwheel]
build-verbosity = "1"
test-requires = ["pytest"]
test-command = "pytest -vsx {package}/tools/test_wheel.py"

[tool.cibuildwheel.linux]
before-all = "bash tools/install_libzmq.sh"
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
musllinux-aarch64-image = "musllinux_1_1"
musllinux-i686-image = "musllinux_1_1"
musllinux-x86_64-image = "musllinux_1_1"

[tool.cibuildwheel.linux.environment]
ZMQ_PREFIX = "/usr/local"
CFLAGS = "-Wl,-strip-all"
CXXFLAGS = "-Wl,-strip-all"

[tool.cibuildwheel.macos]
before-all = "bash tools/install_libzmq.sh"

[tool.cibuildwheel.macos.environment]
ZMQ_PREFIX = "/usr/local"
MACOSX_DEPLOYMENT_TARGET = "10.9"

[tool.cibuildwheel.windows]
# before-all = [
#   "python setup.py fetch_libzmq --dll",
#   "xcopy /i libzmq-dll C:\\libzmq-dll",
# ]
repair-wheel-command = """
    delvewheel repair \
        -v \
        --wheel-dir={dest_dir} \
        {wheel}
"""
        # --add-path=C:/libzmq-dll \

[tool.cibuildwheel.windows.environment]
ZMQ_PREFIX = "libzmq-dll"

# mac-arm target is 10.15
[[tool.cibuildwheel.overrides]]
select = "*macos*{universal2,arm64}*"
environment = { MACOSX_DEPLOYMENT_TARGET = "10.15" }

# manylinux1 for old Python
[[tool.cibuildwheel.overrides]]
select = "cp3{6,7}-*"
manylinux-x86_64-image = "manylinux1"
manylinux-i686-image = "manylinux1"

# manylinux2010 for (less) old cp38-9, pp37-8
[[tool.cibuildwheel.overrides]]
select = "cp3{8,9}-* pp3{7,8}-*"
manylinux-x86_64-image = "manylinux2010"
manylinux-i686-image = "manylinux2010"

# note: manylinux_2_28 builds are added
# in .github/workflows/wheels.yml
[[tool.cibuildwheel.overrides]]
select = "pp*win*"
# pypy builds libzmq as an Extension,
# doesn't bundle dlls (requires separate vcredist install, as pypy itself seems to)
# bundling external libzmq doesn't seem to work
environment = { ZMQ_PREFIX = "" }
repair-wheel-command = ""
